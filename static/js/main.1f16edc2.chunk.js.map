{"version":3,"sources":["assets/logo_green.svg","pages/Introduction/index.js","pages/Permutation/index.js","routes.js","App.js","index.js"],"names":["module","exports","Introduction","className","href","target","rel","size","color","to","src","logo","alt","Permutation","useState","valor","setValor","isNumber","setIsNumber","permutations","setPermutations","swap","array","indexA","indexB","aux","findSecond","first","nextElementIndex","lastElementIndex","ceillIndex","i","style","marginTop","onSubmit","e","preventDefault","val","parseInt","push","split","sort","length","isFinished","toString","firstIndex","splice","perm","name","onChange","value","type","id","map","ind","key","Routes","basename","process","exact","path","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f16edc2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_green.e672988f.svg\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FaInstagram, FaLinkedin, FaGithub } from 'react-icons/fa'\r\n\r\nimport './style.css';\r\n\r\nimport logo from '../../assets/logo_green.svg';\r\n\r\nexport default function Introduction() {\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content\">\r\n        \r\n        <h1>PerGen</h1>\r\n\r\n        <h3>Integrantes: </h3>\r\n        \r\n        <p>Jacson de Sousa Rodrigues 2012901/8 - Desenvolvedor <a \r\n            href=\"https://www.linkedin.com/in/jacson-rodrigues/\" \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FaLinkedin size={24} color={'#81ff6d'} />\r\n          </a> <a \r\n            href=\"https://github.com/jacksrm\" \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FaGithub size={24} color={'#81ff6d'} />\r\n          </a>\r\n        </p>\r\n        <p>Matheus Teixeira Rodrigues 2012913/1 - Designer e Dev. Assist <a \r\n            href=\"https://www.instagram.com/mayh6m\" \r\n            target=\"_blank\" \r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            <FaInstagram size={24} color={'#81ff6d'} />\r\n          </a>\r\n        </p>\r\n        <p>Dante de Oliveira Dantas 2012894/1 - Designer e Dev. Assist  </p>\r\n\r\n        <h3>Objetivo: </h3>\r\n        <p>Construir um algoritmo que gere todas as permutações dos inteiros de 1 até n em ordem lexicográfica.</p>\r\n\r\n        <div className=\"bottom\">\r\n          <Link className=\"button\" to=\"/permutation\">Seguinte →</Link>\r\n\r\n          <a href=\"https://www.unifor.br/\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n            <img src={logo} alt=\"UNIFOR\"/>\r\n          </a>\r\n        </div>\r\n\r\n      </div>\r\n    </>\r\n  );\r\n}","import React, { useState } from 'react';\r\n\r\nimport './style.css';\r\n\r\nexport default function Permutation() {\r\n  const [valor, setValor] = useState('');\r\n  const [isNumber, setIsNumber] = useState(true);\r\n  const [permutations, setPermutations] = useState([]);\r\n\r\n  // cria o nosso array dependendo da entrada do usuário\r\n  function generateArray(e) {\r\n    e.preventDefault();\r\n\r\n    if (!valor) return;\r\n\r\n    let array = [];\r\n\r\n    if (isNumber) {\r\n      let val = parseInt(valor);\r\n\r\n      if (!val || val <= 0) return;\r\n      if (val > 8) val = 8;\r\n\r\n      for (let i = 0; i < val; i++) {\r\n        array.push(i + 1);\r\n      }\r\n    } else {\r\n      array = valor.split(',', 8);\r\n      array.sort();\r\n    }\r\n\r\n    setPermutations(perm(array));\r\n  }\r\n\r\n  // função para trocar a posição de 2 elementos\r\n  function swap(array, indexA, indexB) {\r\n    const aux = array[indexA];\r\n    array[indexA] = array[indexB];\r\n    array[indexB] = aux;\r\n  }\r\n\r\n  // encontra o \"teto\" do nosso elemento \"first\"\r\n  function findSecond(array, first, nextElementIndex, lastElementIndex) {\r\n    let ceillIndex = nextElementIndex;\r\n\r\n    for (let i = ceillIndex + 1; i <= lastElementIndex; i++) {\r\n      if (array[i] > first && array[i] < array[ceillIndex]) ceillIndex = i;\r\n    }\r\n\r\n    return ceillIndex;\r\n  }\r\n\r\n  // executa as permutações\r\n  function perm(array) {\r\n    const size = array.length;\r\n    let permutations = [];\r\n    let isFinished = false;\r\n\r\n    while (isFinished !== true) {\r\n      permutations.push(array.toString());\r\n\r\n      let firstIndex;\r\n\r\n      for (firstIndex = size - 2; firstIndex >= 0; firstIndex--) {\r\n        if (array[firstIndex] < array[firstIndex + 1]) break;\r\n      }\r\n\r\n      if (firstIndex === -1) {\r\n        isFinished = true;\r\n      } else {\r\n        let ceillIndex = findSecond(\r\n          array,\r\n          array[firstIndex],\r\n          firstIndex + 1,\r\n          size - 1\r\n        );\r\n\r\n        swap(array, firstIndex, ceillIndex);\r\n\r\n        let aux = array.splice(firstIndex + 1);\r\n\r\n        aux.sort();\r\n\r\n        array.splice(firstIndex + 1, 0, ...aux);\r\n      }\r\n    }\r\n    return permutations;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"content center\">\r\n        <h1>Gerador de Permutações</h1>\r\n\r\n        <div className=\"app\">\r\n          <div className=\"info\">\r\n            <p>\r\n              Essa é uma aplicação com a finalidade de gerar permutações em\r\n              ordem lexicográfica, tomando como base o algorítmo que consta{' '}\r\n              <a\r\n                href=\"https://www.geeksforgeeks.org/lexicographic-permutations-of-string/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n              >\r\n                neste artigo\r\n              </a>\r\n              .\r\n            </p>\r\n\r\n            <p>\r\n              Você pode escolher permutações com sistema numérico ou\r\n              alfanumérico. Para ambos os sistemas, as permutações são de{' '}\r\n              <strong>1 → N</strong>, porém, por questões de desempenho,\r\n              limitaremos a <strong>1 → 8</strong>. Para o sistema numérico,\r\n              escolha o valor de <strong>N</strong>, para o sistema\r\n              alfanumérico, insira os caracteres separados por vírgula ( , ).\r\n            </p>\r\n\r\n            <p style={{ marginTop: '2vh' }}>\r\n              <strong>Aviso:</strong>{' '}\r\n              <i>\r\n                O resultado será verdadeiro desde que os caracteres{' '}\r\n                <strong>não estejam repetidos</strong>.\r\n              </i>\r\n            </p>\r\n\r\n            <form onSubmit={generateArray}>\r\n              <select\r\n                name=\"select\"\r\n                onChange={(e) =>\r\n                  setIsNumber(e.target.value === 'true' ? true : false)\r\n                }\r\n              >\r\n                <option value=\"true\">Numérico</option>\r\n\r\n                <option value=\"false\">Alfanumérico</option>\r\n              </select>\r\n              <input\r\n                type={isNumber ? 'number' : 'text'}\r\n                value={valor}\r\n                onChange={(e) => setValor(e.target.value)}\r\n              />\r\n              <button className=\"button\" type=\"submit\">\r\n                GO!\r\n              </button>\r\n            </form>\r\n          </div>\r\n\r\n          <div className=\"permutations\">\r\n            <h3 id=\"perm-count\">\r\n              Número de permutações: {permutations.length}\r\n            </h3>\r\n\r\n            <div className=\"scroll\">\r\n              <ul>\r\n                {permutations.map((val, ind) => (\r\n                  <li key={ind}>{val}</li>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\n\r\nimport Introduction from './pages/Introduction';\r\nimport Permutation from './pages/Permutation';\r\n\r\nexport default function Routes() {\r\n  return (\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Introduction} />\r\n        <Route exact path=\"/permutation\" component={Permutation} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}","import React from 'react';\nimport Routes from './routes';\n\nimport './global.css';\n\nfunction App() {\n\n\n  return (\n    <Routes />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}